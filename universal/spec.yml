# This contains a generic cross-platform spec for deep learning
#
# Warning: This is a work in progress and not yet complete

# Convolution layer
name: Convolution
attrs:
    - name: dimension
      description: The dimensionality of the convolution (ie, 1D, 2D or 3D etc...)
      type: integer

    - name: n_filters
      description: number of filters.
      type: integer

    - name: kernel
      description: Size of the kernel in each axis. In a 2D convolution layer, this will be (Kx,Ky).
      type: tuple
    
    - name: stride
      description: the stride size in each axis. In a 2D convolution layer, this will be (sx, sy).
      type: tuple

    - name: pad
      description: padding size, if any, in each axis. In 2D case this will be (pdx, pdy).
      type: tuple

    - name: flip_filters
      description: Whether to flip the filters.
      type: boolean

    - name: init
      description: weights initialization type.
      type: string

    - name: border_mode
      description: mode flag that indicates to keep dims same or valid.
      type: string

    - name: input_dim
      description: input dimension for user supplied dimension. 
      type: tuple 

# Dense layer
name: Dense
attrs:
    - name: input_dim
      description:the input dimensionality 
      type:tuple

    - name: num_units # similar to output_dim
      description: the number of neurons in the dense layer
      type: integer

    - name: init
      description: weights initialization type
      type: string

# Activation layer
# This is a generic activation layer that translates in to most of the activation types
name: Activation
attrs:
    - name: activation
      description: the name of the activation type
      type: enum
      values:
          - HardShrink
          - HardTanh
          - Sigmoid
          - SoftMin
          - SoftMax
          - Sqrt
          - Square
          - Tanh
          - TanhShrink

    - name: kwargs
      description: other arguments to advanced activations such as PRLeU
      type: dict


